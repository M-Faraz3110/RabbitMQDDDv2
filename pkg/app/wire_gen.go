// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"rabbitmqdddv2/pkg/app/controllers/v1"
	"rabbitmqdddv2/pkg/domain/rabbitmq"
	"rabbitmqdddv2/pkg/infra/config"
	"rabbitmqdddv2/pkg/infra/db"
	"rabbitmqdddv2/pkg/infra/insights"
	"rabbitmqdddv2/pkg/infra/logger"
	"rabbitmqdddv2/pkg/infra/repos"
)

// Injectors from wire.go:

// InitializeEvent creates an Event. It will error if the Event is staffed with
// a grumpy greeter.
func InitializeApp() (*app, error) {
	loggerFactory, err := logger.NewLoggerFactory()
	if err != nil {
		return nil, err
	}
	client := db.GetClient()
	tableStorageRepository := repos.NewTableStorageRepo(client)
	rabbitMqService := rabbitmq.NewRabbitMqService(tableStorageRepository)
	rabbitMqController := v1.NewRabbitMqController(rabbitMqService, loggerFactory)
	appInsightsOptions := config.NewInsightsConfig()
	appInsightsCore := insights.NewInsights(appInsightsOptions, loggerFactory)
	appApp := NewApp(loggerFactory, rabbitMqController, appInsightsCore)
	return appApp, nil
}
